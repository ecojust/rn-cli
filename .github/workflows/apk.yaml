name: Build and Release on Any Branch

on:
  push:
    branches: "*" # 监听所有分支的推送

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整的Git历史

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install npm dependencies
        run: npm ci

      - name: Build Android app
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

      - name: Generate unique release name
        id: release-info
        run: |
          # 生成唯一的Release名称和标签
          BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)  # 将斜杠替换为连字符
          TIMESTAMP=$(date +%Y%m%d%H%M%S)  # 获取时间戳
          SHA_SHORT=${GITHUB_SHA:0:8}      # 获取短SHA

          RELEASE_NAME="${BRANCH}-${TIMESTAMP}"
          RELEASE_TAG="${BRANCH}-${SHA_SHORT}"

          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Rename APK with release info
        run: |
          mv android/app/build/outputs/apk/release/app-release.apk app-${{ steps.release-info.outputs.RELEASE_NAME }}.apk

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: app-*.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: android-build
          path: artifacts

      - name: Get tag name
        id: tag
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/app-*.apk
          asset_name: app-${{ steps.tag.outputs.tag }}.apk
          asset_content_type: application/vnd.android.package-archive
