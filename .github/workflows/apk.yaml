name: Build and Release on Any Branch

on:
  push:
    branches: "*" # 监听所有分支的推送

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整的Git历史

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install npm dependencies
        run: npm ci

      - name: Build Android app
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

      - name: Generate unique release name
        id: release-info
        run: |
          # 生成唯一的Release名称和标签
          BRANCH=${GITHUB_REF#refs/heads/}  # 获取分支名
          TIMESTAMP=$(date +%Y%m%d%H%M%S)  # 获取时间戳
          SHA_SHORT=${GITHUB_SHA:0:8}      # 获取短SHA

          RELEASE_NAME="${BRANCH}-${TIMESTAMP}"
          RELEASE_TAG="${BRANCH}-${SHA_SHORT}"

          echo "release_name=$RELEASE_NAME" >> $GITHUB_ENV
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Rename APK with release info
        run: |
          mv android/app/build/outputs/apk/release/app-release.apk app-${{ env.release_name }}.apk

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app-*.apk"
          token: ${{ github.token }}
          name: ${{ env.release_name }} # 使用生成的名称
          tag: ${{ env.release_tag }} # 使用生成的标签
          draft: false
          prerelease: true # 标记为预发布版本
          generateReleaseNotes: true
