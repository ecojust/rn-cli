name: Build React Native Android App

on:
  push:
    branches: [master] # 当main分支有push时触发
  pull_request:
    branches: [master] # 当向main分支发起PR时触发

jobs:
  build:
    runs-on: ubuntu-latest # 使用Ubuntu环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # 检出代码

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin" # 使用Temurin JDK分发版

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # 使用Node.js 16

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install npm dependencies
        run: npm ci # 安装依赖

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Build Android app
        id: build_app
        run: |
          cd android
          ./gradlew assembleRelease  # 构建Release版本
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk # Android SDK路径

          # 签名apk
      #   - uses: r0adkll/sign-android-release@v1
      #     name: Sign app APK
      #     id: sign_app
      #     with:
      #       releaseDirectory: app/build/outputs/apk/release
      #       signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      #       alias: ${{ secrets.ALIAS }}
      #       keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      #       keyPassword: ${{ secrets.KEY_PASSWORD }}
      #     # 还能设置build-tools version，29.0.3好像不支持了
      #     env:
      #       # override default build-tools version (29.0.3) -- optional
      #       BUILD_TOOLS_VERSION: "34.0.0"

      # build-tools可能不存在，用step查看下支持哪些
      - run: ls /usr/local/lib/android/sdk/build-tools/

      # 重命名apk
      # GITHUB_REF_NAME是“触发workflow的分支或tag名称”
      - run: mv ${{steps.build_app.outputs.signedReleaseFile}} fundark_$GITHUB_REF_NAME.apk

      # 发布
      - uses: ncipollo/release-action@v1
        with:
          # 要包含到Release Assets中的文件
          artifacts: "*.apk"
          # 会使用一个临时的token来创建Release
          token: ${{ github.token }}
          # 自动生成一些变化列表之类的内容。
          generateReleaseNotes: true

    #   - name: Releasing using Hub
    #     uses: sangatdesai/release-apk@main
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.apk }}
    #       APP_FOLDER: app
    #   - name: Upload APK
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: app-release.apk
    #       path: android/app/build/outputs/apk/release/app-release.apk

    #   - name: publish release
    #     id: publish-release
    #     uses: actions/github-script@v6
    #     env:
    #       release_id: "test"
    #     with:
    #       script: |
    #         github.rest.repos.updateRelease({
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #           release_id: process.env.release_id,
    #           draft: false,
    #           prerelease: false
    #         })
