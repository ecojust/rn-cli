name: Build React Native Android App

on:
  push:
    branches: [master]
    tags:
      - "v*"
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest # 使用Ubuntu环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # 检出代码

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin" # 使用Temurin JDK分发版

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # 使用Node.js 16

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install npm dependencies
        run: npm ci # 安装依赖

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Build Android app
        id: build_app
        run: |
          cd android
          ./gradlew assembleRelease  # 构建Release版本
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk # Android SDK路径

      - name: Check APK existence
        run: |
          if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
            echo "APK 文件存在，构建成功！"
          else
            echo "APK 文件不存在，构建失败！"
            exit 1
          fi

      - name: 确定版本名称
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +%Y%m%d)-${GITHUB_SHA:0:8}
          fi
          echo "version=$VERSION" >> $GITHUB_ENV

      # build-tools可能不存在，用step查看下支持哪些
      - run: ls /usr/local/lib/android/sdk/build-tools/

      # 重命名apk
      # GITHUB_REF_NAME是“触发workflow的分支或tag名称”
      - run: mv android/app/build/outputs/apk/release/app-release.apk fundark_$GITHUB_REF_NAME.apk

      # 上传APK作为artifact
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: fundark_*.apk

      # 只在推送标签时创建Release
      - uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "fundark_*.apk"
          token: ${{ github.token }}
          generateReleaseNotes: true
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
